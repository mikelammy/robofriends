{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","_ref","id","name","email","react_default","a","createElement","className","alt","src","concat","CardList","robots","map","user","i","components_Card","key","SearchBox","props","searchfield","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","ErrorBoundry","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","error","info","setState","React","Component","App","onSearchChange","event","target","value","_this2","fetch","then","response","json","users","_this3","filteredRobots","filter","robot","toLowerCase","includes","length","components_SearchBox","components_Scroll","components_ErrorBoundry","components_CardList","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_containers_App"],"mappings":"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","file":"static/js/main.88df390c.chunk.js","sourcesContent":["import React from 'react';\n\n\nconst Card = ( {id, name, email} ) => {\n\t// const { id, name, email } = props\n\treturn (\n\t\t<div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\n\t\t\t<img alt='robots' src={`https://robohash.org/${id}?200x200`} />\n\t\t\t<div>\n\t\t\t\t<h2>{name}</h2>\n\t\t\t\t<p>{email}</p>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Card;\n\n// const Card = (props) => {}","import React from 'react';\nimport Card from './Card'\n\nconst CardList = ({robots}) => {\n\t// const {robots} = props;\n\t// if (true) {\n\t// \tthrow new Error(\"NOOOOOOOOOOWADDDUP!\")\n\t// }\n\treturn (\n\t\t<div>\n\t\t\t{\n      \t \t\trobots.map( (user, i) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Card \n\t\t\t\t\t\t\tkey={i} \n\t\t\t\t\t\t\tid={robots[i].id} \n\t\t\t\t\t\t\tname={robots[i].name} \n\t\t\t\t\t\t\temail={robots[i].email} \n\t\t\t\t\t\t/>\n\t\t\t\t\t)\n\t\t\t\t})\n\t\t\t}\t\n    \t</div>\n\t)\n}\n\nexport default CardList;","import React from 'react'\n\nconst SearchBox = ( props ) => {\n\tconst {searchfield, searchChange} = props\n\treturn (\n\t\t<div className=\"pa2\">\n\t\t\t<input \n\t\t\tclassName='pa3 ba b--green bg-lightest-blue' \n\t\t\ttype='search' \n\t\t\tplaceholder='search robots' \n\t\t\tonChange={searchChange}\n\t\t\t/>\n\t\t</div>\n\t)\n}\n\nexport default SearchBox\n","import React from 'react'\n\nconst Scroll = (props) => {\n\treturn (\n\t\t\n\t\t<div style={ {overflowY: 'scroll', border: '5px solid black', height: '800px'} }>\n\t\t\t{props.children}\n\t\t</div>\n\t)\n}\n\nexport default Scroll\n\n//comment","import React from 'react'\n\nclass ErrorBoundry extends React.Component {\n\tconstructor (props) {\n\t\tsuper(props)\n\t\tthis.state = { hasError: false }\n\t} \n\n\tcomponentDidCatch(error, info) {\n\t\tthis.setState( {hasError: true} )\n\t}\n\n\trender() {\n\n\t\tif (this.state.hasError) {\n\t\t\treturn <h1>Oooops.  That is not good</h1>\n\t\t}\n\t\treturn this.props.children\n\t}\n}\n\nexport default ErrorBoundry;\n","import React from 'react'\nimport CardList from '../components/CardList'\nimport SearchBox from '../components/SearchBox'\nimport Scroll from '../components/Scroll'\nimport ErrorBoundry from '../components/ErrorBoundry'\nimport './App.css'\n\nclass App extends React.Component {\n\tconstructor () {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\trobots: [],\n\t\t\tsearchfield: ''\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tfetch('https://jsonplaceholder.typicode.com/users').then(response => response.json() )\n\t\t.then(users => this.setState({robots: users} ))\n\t}\n\n\tonSearchChange = (event) => {\n\t\tthis.setState({ searchfield: event.target.value })\n\t\t// console.log(event.target.value)\n\t\t// const filteredRobots = this.state.robots.filter(robot => {\n\t\t// \treturn robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n\t\t// })\n\t\t// // console.log(filteredRobots)\n\t}\n\n\trender() {\n\t\tconst filteredRobots = this.state.robots.filter(robot => {\n\t\t\treturn robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase() );\n\t\t})\n\n\t\tif (this.state.robots.length === 0) {\n\t\t\treturn <h1>Loading</h1>\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<div className=\"tc\">\n\t\t\t\t\t<h1 className=\"f2\">Robofriends</h1>\n\t\t\t\t\t<SearchBox searchChange={this.onSearchChange} />\n\t\t\t\t\t<Scroll>\n\t\t\t\t\t\t<ErrorBoundry>\n\t\t\t\t\t\t\t<CardList robots={filteredRobots} />\n\t\t\t\t\t\t</ErrorBoundry>\n\t\t\t\t\t</Scroll>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\t\n\t}s\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './containers/App'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}